<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>spider-modularization</groupId>
    <artifactId>spider-modularization</artifactId>
    <packaging>pom</packaging>
    <version>2.7.5</version>
    <modules>
        <module>spider-argument-resolver</module>
    </modules>
    <properties>
        <github.global.server>github</github.global.server>
    </properties>


    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <!-- since 2.0 -->
                <version>3.7.0</version>
                <configuration>
                    <!-- use the Java 8 language features -->
                    <source>1.8</source>
                    <!-- want the compiled classes to be compatible with JVM 1.8 -->
                    <target>1.8</target>
                    <!-- The -encoding argument for the Java compiler. -->
                    <encoding>UTF8</encoding>
                </configuration>
            </plugin>

            <!-- ProGuard混淆插件-->
            <!--<plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>2.0.11</version>
                <executions>
                    <execution>
                        &lt;!&ndash; 混淆时刻，这里是打包的时候混淆&ndash;&gt;
                        <phase>package</phase>
                        <goals>
                            &lt;!&ndash; 指定使用插件的混淆功能 &ndash;&gt;
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    &lt;!&ndash; 是否将生成的PG文件安装部署&ndash;&gt;
                    <attach>true</attach>
                    &lt;!&ndash; 是否混淆&ndash;&gt;
                    <obfuscate>true</obfuscate>
                    &lt;!&ndash; 指定生成文件分类 &ndash;&gt;
                    <attachArtifactClassifier>pg</attachArtifactClassifier>
                    <proguardInclude>${basedir}/proguard.conf</proguardInclude>
                    <libs>
                        <lib>${java.home}/lib/rt.jar</lib>
                        <lib>${java.home}/lib/jce.jar</lib>
                    </libs>
                    &lt;!&ndash; 对什么东西进行加载，这里仅有classes成功，不可能对配置文件及JSP混淆吧&ndash;&gt;
                    <injar>classes</injar>
                    <outjar>abc-pg.jar</outjar>
                    &lt;!&ndash; 输出目录&ndash;&gt;
                    <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
            </plugin>-->
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.1</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo
                    </altDeploymentRepository>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.12</version>
                <configuration>
                    <message>Maven artifacts for ${project.version}</message>
                    <noJekyll>true</noJekyll>
                    <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory><!--本地jar地址-->
                    <branch>refs/heads/mvn-repo</branch><!--分支-->
                    <merge>true</merge>

                    <includes>
                        <include>**/*</include>

                    </includes>
                    <repositoryName>spider-modularization</repositoryName><!--对应github上创建的仓库名称 name-->
                    <repositoryOwner>dongsl</repositoryOwner><!--github 仓库所有者-->

                </configuration>

                <executions>
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>